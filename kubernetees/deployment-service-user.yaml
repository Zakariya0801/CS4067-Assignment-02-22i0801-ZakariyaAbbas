apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: onlineeventbookingzakariyaabbas
spec:
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: onlineeventbookingzakariyaabbas
  labels:
    app: user-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: zakariyaabbas/user-service:latest 
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: "production"

            # Construct CONNECTION_STRING with password from Secret
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_PASSWORD
            - name: CONNECTION_STRING
              value: "postgresql://postgres:$(POSTGRES_PASSWORD)@postgres-db:5432/auth_db"

            # API URLs from ConfigMap
            - name: BOOKING_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: BOOKING_SERVICE_URL
            - name: EVENT_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: EVENT_SERVICE_URL
            - name: CORS_ORIGIN
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: CORS_ORIGIN
